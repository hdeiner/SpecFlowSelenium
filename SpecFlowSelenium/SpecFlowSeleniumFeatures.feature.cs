// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowSelenium
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("As a Google consumer, I want to learn to trust Google results,", Description="\t\t because I get what I need without clicking through URL results.", SourceFile="SpecFlowSeleniumFeatures.feature", SourceLine=0)]
    public partial class AsAGoogleConsumerIWantToLearnToTrustGoogleResultsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowSeleniumFeatures.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "As a Google consumer, I want to learn to trust Google results,", "\t\t because I get what I need without clicking through URL results.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SpotCheckQuickResults(string query, string result, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Spot check quick results", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.When("I use Google", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
 testRunner.Then(string.Format("I should see \"{0}\" when I search for \"{1}\"", result, query), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Spot check quick results, Variant 0", SourceLine=9)]
        public virtual void SpotCheckQuickResults_Variant0()
        {
#line 4
this.SpotCheckQuickResults("Abraham Lincoln assisination date", "April 14, 1865", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Spot check quick results, Variant 1", SourceLine=9)]
        public virtual void SpotCheckQuickResults_Variant1()
        {
#line 4
this.SpotCheckQuickResults("first man on the moon", "Neil Armstrong", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Spot check quick results, Variant 2", SourceLine=9)]
        public virtual void SpotCheckQuickResults_Variant2()
        {
#line 4
this.SpotCheckQuickResults("first man on the moon", "Apollo 11", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Spot check quick results, Variant 3", SourceLine=9)]
        public virtual void SpotCheckQuickResults_Variant3()
        {
#line 4
this.SpotCheckQuickResults("pattern altitude lincoln park airport", "1201 MSL", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Spot check quick results, Variant 4", SourceLine=9)]
        public virtual void SpotCheckQuickResults_Variant4()
        {
#line 4
this.SpotCheckQuickResults("Kakistocracy", "government by the worst persons", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
